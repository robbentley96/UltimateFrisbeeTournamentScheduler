// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UltimateFrisbeeTournamentScheduler;

namespace UltimateFrisbeeTournamentScheduler.Migrations
{
    [DbContext(typeof(TournamentContext))]
    [Migration("20201108120213_AddedPoolFunctionality")]
    partial class AddedPoolFunctionality
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("UltimateFrisbeeTournamentScheduler.Match", b =>
                {
                    b.Property<int>("MatchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Team1TeamId")
                        .HasColumnType("int");

                    b.Property<int?>("Team2TeamId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TournamentId")
                        .HasColumnType("int");

                    b.HasKey("MatchId");

                    b.HasIndex("Team1TeamId");

                    b.HasIndex("Team2TeamId");

                    b.HasIndex("TournamentId");

                    b.ToTable("Matches");
                });

            modelBuilder.Entity("UltimateFrisbeeTournamentScheduler.Pool", b =>
                {
                    b.Property<int>("PoolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("TournamentId")
                        .HasColumnType("int");

                    b.HasKey("PoolId");

                    b.HasIndex("TournamentId");

                    b.ToTable("Pools");
                });

            modelBuilder.Entity("UltimateFrisbeeTournamentScheduler.Team", b =>
                {
                    b.Property<int>("TeamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PoolId")
                        .HasColumnType("int");

                    b.Property<int>("Seed")
                        .HasColumnType("int");

                    b.Property<int?>("TournamentId")
                        .HasColumnType("int");

                    b.HasKey("TeamId");

                    b.HasIndex("PoolId");

                    b.HasIndex("TournamentId");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("UltimateFrisbeeTournamentScheduler.Tournament", b =>
                {
                    b.Property<int>("TournamentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BreakLength")
                        .HasColumnType("int");

                    b.Property<int>("MatchLength")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phase")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TournamentId");

                    b.ToTable("Tournaments");
                });

            modelBuilder.Entity("UltimateFrisbeeTournamentScheduler.Match", b =>
                {
                    b.HasOne("UltimateFrisbeeTournamentScheduler.Team", "Team1")
                        .WithMany()
                        .HasForeignKey("Team1TeamId");

                    b.HasOne("UltimateFrisbeeTournamentScheduler.Team", "Team2")
                        .WithMany()
                        .HasForeignKey("Team2TeamId");

                    b.HasOne("UltimateFrisbeeTournamentScheduler.Tournament", "Tournament")
                        .WithMany("Matches")
                        .HasForeignKey("TournamentId");
                });

            modelBuilder.Entity("UltimateFrisbeeTournamentScheduler.Pool", b =>
                {
                    b.HasOne("UltimateFrisbeeTournamentScheduler.Tournament", "Tournament")
                        .WithMany()
                        .HasForeignKey("TournamentId");
                });

            modelBuilder.Entity("UltimateFrisbeeTournamentScheduler.Team", b =>
                {
                    b.HasOne("UltimateFrisbeeTournamentScheduler.Pool", "Pool")
                        .WithMany("Teams")
                        .HasForeignKey("PoolId");

                    b.HasOne("UltimateFrisbeeTournamentScheduler.Tournament", "Tournament")
                        .WithMany("Teams")
                        .HasForeignKey("TournamentId");
                });
#pragma warning restore 612, 618
        }
    }
}
